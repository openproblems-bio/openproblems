functionality:
  name: "scot"
  namespace: "match_modalities/methods"
  version: "build_main"
  arguments:
  - type: "file"
    name: "--input_mod1"
    info:
      label: "Modality 1"
      summary: "The first modality of a multimodal dataset. The cells of this dataset\
        \ are randomly permuted."
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
          required: true
        obsm:
        - type: "double"
          name: "X_svd"
          description: "The resulting SVD PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/match_modalities/scicar_cell_lines/dataset_mod1.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_mod2"
    info:
      label: "Modality 2"
      summary: "The second modality of a multimodal dataset. The cells of this dataset\
        \ are randomly permuted."
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
          required: true
        obsm:
        - type: "double"
          name: "X_svd"
          description: "The resulting SVD PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/match_modalities/scicar_cell_lines/dataset_mod2.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_mod1"
    info:
      label: "Integrated mod1"
      summary: "The integrated embedding for the first modality"
      slots:
        obsm:
        - type: "double"
          name: "integrated"
          description: "An integrated embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "Which method was used"
          required: true
    example:
    - "resources_test/match_modalities/scicar_cell_lines/integrated_mod1.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_mod2"
    info:
      label: "Integrated mod2"
      summary: "The integrated embedding for the second modality"
      slots:
        obsm:
        - type: "double"
          name: "integrated"
          description: "An integrated embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "Which method was used"
          required: true
    example:
    - "resources_test/match_modalities/scicar_cell_lines/integrated_mod2.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean_true"
    name: "--balanced"
    description: "Determines whether balanced or unbalanced optimal transport. In\
      \ the balanced case, the target and source distributions are assumed to have\
      \ equal mass."
    info: null
    direction: "input"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "file"
    path: "resources_test/match_modalities/scicar_cell_lines"
    dest: "resources_test/match_modalities/scicar_cell_lines"
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "src/common/library.bib"
  info:
    label: "Single Cell Optimal Transport"
    description: "Single Cell Optimal Transport (SCOT) is a method for integrating\
      \ multimodal single-cell data. It is based on the idea of aligning the distributions\
      \ of the two modalities using optimal transport.\n"
    summary: "Run Single Cell Optimal Transport"
    preferred_normalization: "log_cp10k"
    reference: "Demetci2020scot"
    documentation_url: "https://github.com/rsinghlab/SCOT#readme"
    repository_url: "https://github.com/rsinghlab/SCOT"
    type: "method"
    type_info:
      label: "Method"
      summary: "A multimodal data integration method."
      description: "A multimodal method to integrate data.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "openproblems/base_python:1.0.0"
  target_organization: "openproblems-bio/openproblems"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems"
  setup:
  - type: "apt"
    packages:
    - "git"
    interactive: false
  - type: "docker"
    run:
    - "cd /opt && git clone --depth 1 https://github.com/rsinghlab/SCOT.git && cd\
      \ SCOT && pip install -r requirements.txt"
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "lowmem"
    - "lowcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
    script:
    - "process.errorStrategy = 'ignore'"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems/openproblems/src/tasks/match_modalities/methods/scot/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems/openproblems/target/nextflow/match_modalities/methods/scot"
  executable: "/home/runner/work/openproblems/openproblems/target/nextflow/match_modalities/methods/scot/scot"
  viash_version: "0.8.6"
  git_commit: "3ba588de15b5e84d995a287f7cb943edd6a3d034"
  git_remote: "https://github.com/openproblems-bio/openproblems"
  git_tag: "v1.0.0-1415-g3ba588de"
