functionality:
  name: "coranking"
  namespace: "dimensionality_reduction/metrics"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_embedding"
    info:
      label: "Embedding"
      summary: "A dataset with dimensionality reduction embedding."
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/embedding.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_solution"
    info:
      label: "Test data"
      summary: "The data for evaluating a dimensionality reduction."
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "cell_type"
          description: "Classification of the cell type based on its characteristics\
            \ and function within the tissue or organism."
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "dataset_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "dataset_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/solution.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    info:
      label: "Score"
      summary: "Metric score file"
      slots:
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "metric_ids"
          description: "One or more unique metric identifiers"
          multiple: true
          required: true
        - type: "double"
          name: "metric_values"
          description: "The metric values obtained for the given prediction. Must\
            \ be of same length as 'metric_ids'."
          multiple: true
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/score.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  test_resources:
  - type: "file"
    path: "resources_test/dimensionality_reduction/pancreas/"
    dest: "resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    path: "src/common/comp_tests/check_metric_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "src/common/library.bib"
  info:
    metrics:
    - name: "continuity_at_k30"
      label: "Continuity at k=30"
      reference: "venna2006local"
      summary: "The continuity metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      description: "The continuity metric at k=30 computed on the co-ranking matrix\
        \ between expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "trustworthiness_at_k30"
      label: "Trustworthiness at k=30"
      summary: "The trustworthiness metric at k=30 computed on the co-ranking matrix\
        \ between expression matrix and embedding."
      description: "The trustworthiness metric at k=30 computed on the co-ranking\
        \ matrix between expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "venna2006local"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "qnx_at_k30"
      label: "The value for QNX at k=30"
      summary: "The QNX metric at k=30 computed on the co-ranking matrix between expression\
        \ matrix and embedding."
      description: "The QNX metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "lee2009quality"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "lcmc_at_k30"
      label: "The value for LCMC at k=30"
      summary: "The LCMC metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      description: "The LCMC metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "chen2009local"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "qnx_auc"
      label: "Area under the QNX curve"
      summary: "The AU-QNX metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      description: "The AU-QNX metric at k=30 computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "qlocal"
      label: "Local quality measure"
      summary: "The local quality metric computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      description: "The local quality metric computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    - name: "qglobal"
      label: "Global quality measure"
      summary: "The Global quality metric computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      description: "The Global quality metric computed on the co-ranking matrix between\
        \ expression matrix and embedding."
      repository_url: "https://github.com/gdkrmr/coRanking/"
      documentation_url: "https://coranking.guido-kraemer.com/"
      reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
      v1:
        path: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
        commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
        note: "The original v1 implementations consisted of a lot of helper functions\
          \ which were \nderived from the pyDRMetrics package. This version uses the\
          \ coRanking package\nto avoid reimplementing and potentially introducing\
          \ a lot of bugs in how\nthe various metrics are computed.\n\nIn addition,\
          \ the references for each of the metrics were looked up to\nproperly attribute\
          \ the original authors of each of the metrics.\n"
    type: "metric"
    type_info:
      label: "Metric"
      summary: "A dimensionality reduction metric."
      description: "A metric for evaluating dimensionality reductions.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "openproblems/base_r:1.0.0"
  target_organization: "openproblems-bio/openproblems"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems"
  setup:
  - type: "r"
    cran:
    - "coRanking"
    bioc_force_install: false
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "highmem"
    - "midcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
    script:
    - "process.errorStrategy = 'ignore'"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems/openproblems/src/tasks/dimensionality_reduction/metrics/coranking/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems/openproblems/target/nextflow/dimensionality_reduction/metrics/coranking"
  executable: "/home/runner/work/openproblems/openproblems/target/nextflow/dimensionality_reduction/metrics/coranking/coranking"
  viash_version: "0.8.6"
  git_commit: "8d7ac701c2d00df267386f4e94d884f71fa95101"
  git_remote: "https://github.com/openproblems-bio/openproblems"
