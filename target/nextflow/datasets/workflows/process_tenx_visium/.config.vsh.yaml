functionality:
  name: "process_tenx_visium"
  namespace: "datasets/workflows"
  version: "main_build"
  argument_groups:
  - name: "Input"
    arguments:
    - type: "string"
      name: "--input_expression"
      description: "URL to the feature / barcode matrix HDF5."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_spatial"
      description: "URL to the Spatial imaging data."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output_dataset"
      description: "Output h5ad file"
      info:
        label: "Raw dataset"
        summary: "An unprocessed dataset as output by a dataset loader."
        description: "This dataset contains raw counts and metadata as output by a\
          \ dataset loader.\n\nThe format of this file is derived from the [CELLxGENE\
          \ schema v4.0.0](https://github.com/chanzuckerberg/single-cell-curation/blob/main/schema/4.0.0/schema.md).\n"
        slots:
          layers:
          - type: "integer"
            name: "counts"
            description: "Raw counts"
            required: true
          obs:
          - type: "string"
            name: "dataset_id"
            description: "Identifier for the dataset from which the cell data is derived,\
              \ useful for tracking and referencing purposes."
            required: false
          - type: "string"
            name: "assay"
            description: "Type of assay used to generate the cell data, indicating\
              \ the methodology or technique employed."
            required: false
          - type: "string"
            name: "assay_ontology_term_id"
            description: "Experimental Factor Ontology (`EFO:`) term identifier for\
              \ the assay, providing a standardized reference to the assay type."
            required: false
          - type: "string"
            name: "cell_type"
            description: "Classification of the cell type based on its characteristics\
              \ and function within the tissue or organism."
            required: false
          - type: "string"
            name: "cell_type_ontology_term_id"
            description: "Cell Ontology (`CL:`) term identifier for the cell type,\
              \ offering a standardized reference to the specific cell classification."
            required: false
          - type: "string"
            name: "development_stage"
            description: "Stage of development of the organism or tissue from which\
              \ the cell is derived, indicating its maturity or developmental phase."
            required: false
          - type: "string"
            name: "development_stage_ontology_term_id"
            description: "Ontology term identifier for the developmental stage, providing\
              \ a standardized reference to the organism's developmental phase.\n\n\
              If the organism is human (`organism_ontology_term_id == 'NCBITaxon:9606'`),\
              \ then the Human Developmental Stages (`HsapDv:`) ontology is used.\
              \  \nIf the organism is mouse (`organism_ontology_term_id == 'NCBITaxon:10090'`),\
              \ then the Mouse Developmental Stages (`MmusDv:`) ontology is used.\n\
              Otherwise, the Uberon (`UBERON:`) ontology is used.\n"
            required: false
          - type: "string"
            name: "disease"
            description: "Information on any disease or pathological condition associated\
              \ with the cell or donor."
            required: false
          - type: "string"
            name: "disease_ontology_term_id"
            description: "Ontology term identifier for the disease, enabling standardized\
              \ disease classification and referencing.\n\nMust be a term from the\
              \ Mondo Disease Ontology (`MONDO:`) ontology term, or `PATO:0000461`\
              \ from the Phenotype And Trait Ontology (`PATO:`).\n"
            required: false
          - type: "string"
            name: "donor_id"
            description: "Identifier for the donor from whom the cell sample is obtained."
            required: false
          - type: "boolean"
            name: "is_primary_data"
            description: "Indicates whether the data is primary (directly obtained\
              \ from experiments) or has been computationally derived from other primary\
              \ data."
            required: false
          - type: "string"
            name: "organism"
            description: "Organism from which the cell sample is obtained."
            required: false
          - type: "string"
            name: "organism_ontology_term_id"
            description: "Ontology term identifier for the organism, providing a standardized\
              \ reference for the organism.\n\nMust be a term from the NCBI Taxonomy\
              \ Ontology (`NCBITaxon:`) which is a child of `NCBITaxon:33208`.\n"
            required: false
          - type: "string"
            name: "self_reported_ethnicity"
            description: "Ethnicity of the donor as self-reported, relevant for studies\
              \ considering genetic diversity and population-specific traits."
            required: false
          - type: "string"
            name: "self_reported_ethnicity_ontology_term_id"
            description: "Ontology term identifier for the self-reported ethnicity,\
              \ providing a standardized reference for ethnic classifications.\n\n\
              If the organism is human (`organism_ontology_term_id == 'NCBITaxon:9606'`),\
              \ then the Human Ancestry Ontology (`HANCESTRO:`) is used.\n"
            required: false
          - type: "string"
            name: "sex"
            description: "Biological sex of the donor or source organism, crucial\
              \ for studies involving sex-specific traits or conditions."
            required: false
          - type: "string"
            name: "sex_ontology_term_id"
            description: "Ontology term identifier for the biological sex, ensuring\
              \ standardized classification of sex. Only `PATO:0000383`, `PATO:0000384`\
              \ and `PATO:0001340` are allowed."
            required: false
          - type: "string"
            name: "suspension_type"
            description: "Type of suspension or medium in which the cells were stored\
              \ or processed, important for understanding cell handling and conditions."
            required: false
          - type: "string"
            name: "tissue"
            description: "Specific tissue from which the cells were derived, key for\
              \ context and specificity in cell studies."
            required: false
          - type: "string"
            name: "tissue_ontology_term_id"
            description: "Ontology term identifier for the tissue, providing a standardized\
              \ reference for the tissue type.\n\nFor organoid or tissue samples,\
              \ the Uber-anatomy ontology (`UBERON:`) is used. The term ids must be\
              \ a child term of `UBERON:0001062` (anatomical entity).\nFor cell cultures,\
              \ the Cell Ontology (`CL:`) is used. The term ids cannot be `CL:0000255`,\
              \ `CL:0000257` or `CL:0000548`.\n"
            required: false
          - type: "string"
            name: "tissue_general"
            description: "General category or classification of the tissue, useful\
              \ for broader grouping and comparison of cell data."
            required: false
          - type: "string"
            name: "tissue_general_ontology_term_id"
            description: "Ontology term identifier for the general tissue category,\
              \ aiding in standardizing and grouping tissue types.\n\nFor organoid\
              \ or tissue samples, the Uber-anatomy ontology (`UBERON:`) is used.\
              \ The term ids must be a child term of `UBERON:0001062` (anatomical\
              \ entity).\nFor cell cultures, the Cell Ontology (`CL:`) is used. The\
              \ term ids cannot be `CL:0000255`, `CL:0000257` or `CL:0000548`.\n"
            required: false
          - type: "string"
            name: "batch"
            description: "A batch identifier. This label is very context-dependent\
              \ and may be a combination of the tissue, assay, donor, etc."
            required: false
          - type: "integer"
            name: "soma_joinid"
            description: "If the dataset was retrieved from CELLxGENE census, this\
              \ is a unique identifier for the cell."
            required: false
          var:
          - type: "string"
            name: "feature_id"
            description: "Unique identifier for the feature, usually a ENSEMBL gene\
              \ id."
            required: false
          - type: "string"
            name: "feature_name"
            description: "A human-readable name for the feature, usually a gene symbol."
            required: true
          - type: "integer"
            name: "soma_joinid"
            description: "If the dataset was retrieved from CELLxGENE census, this\
              \ is a unique identifier for the feature."
            required: false
          uns:
          - type: "string"
            name: "dataset_id"
            description: "A unique identifier for the dataset. This is different from\
              \ the `obs.dataset_id` field, which is the identifier for the dataset\
              \ from which the cell data is derived."
            required: true
          - name: "dataset_name"
            type: "string"
            description: "A human-readable name for the dataset."
            required: true
          - type: "string"
            name: "dataset_url"
            description: "Link to the original source of the dataset."
            required: false
          - name: "dataset_reference"
            type: "string"
            description: "Bibtex reference of the paper in which the dataset was published."
            required: false
            multiple: true
          - name: "dataset_summary"
            type: "string"
            description: "Short description of the dataset."
            required: true
          - name: "dataset_description"
            type: "string"
            description: "Long description of the dataset."
            required: true
          - name: "dataset_organism"
            type: "string"
            description: "The organism of the sample in the dataset."
            required: false
            multiple: true
      example:
      - "resources_test/common/pancreas/raw.h5ad"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output_meta"
      description: "Dataset metadata"
      info: null
      default:
      - "dataset_metadata.yaml"
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Metadata"
    arguments:
    - type: "string"
      name: "--id"
      description: "Unique identifier of the dataset."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_name"
      description: "Nicely formatted name."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_url"
      description: "Link to the original source of the dataset."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_reference"
      description: "Bibtex reference of the paper in which the dataset was published."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_summary"
      description: "Short description of the dataset."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_description"
      description: "Long description of the dataset."
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--dataset_organism"
      description: "The organism of the dataset."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Gene or spot filtering"
    description: "Arguments related to filtering cells and genes by counts."
    arguments:
    - type: "integer"
      name: "--spot_filter_min_genes"
      description: "Remove spots with less than this number of genes."
      info: null
      example:
      - 200
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--spot_filter_min_counts"
      description: "Remove spots with less than this number of counts."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--gene_filter_min_spots"
      description: "Remove genes expressed in less than this number of cells."
      info: null
      example:
      - 50
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--gene_filter_min_counts"
      description: "Remove genes with less than this number of counts."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--remove_mitochondrial"
      description: "Remove mitovhondrial genes?"
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Sampling options"
    arguments:
    - type: "boolean"
      name: "--do_subsample"
      description: "Whether or not to subsample the dataset"
      info: null
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--n_obs"
      description: "Maximum number of observations to be kept. It might end up being\
        \ less because empty cells / genes are removed."
      info: null
      default:
      - 500
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--n_vars"
      description: "Maximum number of variables to be kept. It might end up being\
        \ less because empty cells / genes are removed."
      info: null
      default:
      - 500
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seed"
      description: "A seed for the subsampling."
      info: null
      example:
      - 123
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Normalization"
    arguments:
    - type: "string"
      name: "--normalization_methods"
      description: "Which normalization methods to run."
      info: null
      default:
      - "log_cp10k"
      - "log_cpm"
      - "sqrt_cp10k"
      - "sqrt_cpm"
      - "l1_sqrt"
      required: false
      choices:
      - "log_cp10k"
      - "log_cpm"
      - "sqrt_cp10k"
      - "sqrt_cpm"
      - "l1_sqrt"
      - "log_scran_pooling"
      direction: "input"
      multiple: true
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "nextflow_script"
    path: "main.nf"
    is_executable: true
    entrypoint: "run_wf"
  - type: "file"
    path: "src/wf_utils/helper.nf"
  description: "Download and process datasets originating from 10x Genomics.\n"
  info: null
  status: "enabled"
  dependencies:
  - name: "datasets/loaders/tenx_visium"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/loaders/tenx_visium/config.vsh.yaml"
    configInfo:
      functionalityName: "tenx_visium"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/loaders/tenx_visium/config.vsh.yaml"
      functionalityNamespace: "datasets/loaders"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/loaders/tenx_visium/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/loaders/tenx_visium"
  - name: "datasets/normalization/log_cp"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/log_cp/config.vsh.yaml"
    configInfo:
      functionalityName: "log_cp"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/log_cp/config.vsh.yaml"
      functionalityNamespace: "datasets/normalization"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/normalization/log_cp/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/normalization/log_cp"
  - name: "datasets/normalization/log_scran_pooling"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/log_scran_pooling/config.vsh.yaml"
    configInfo:
      functionalityName: "log_scran_pooling"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/log_scran_pooling/config.vsh.yaml"
      functionalityNamespace: "datasets/normalization"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/normalization/log_scran_pooling/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/normalization/log_scran_pooling"
  - name: "datasets/normalization/sqrt_cp"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/sqrt_cp/config.vsh.yaml"
    configInfo:
      functionalityName: "sqrt_cp"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/sqrt_cp/config.vsh.yaml"
      functionalityNamespace: "datasets/normalization"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/normalization/sqrt_cp/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/normalization/sqrt_cp"
  - name: "datasets/normalization/l1_sqrt"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/l1_sqrt/config.vsh.yaml"
    configInfo:
      functionalityName: "l1_sqrt"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/normalization/l1_sqrt/config.vsh.yaml"
      functionalityNamespace: "datasets/normalization"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/normalization/l1_sqrt/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/normalization/l1_sqrt"
  - name: "datasets/processors/subsample"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/datasets/processors/subsample/config.vsh.yaml"
    configInfo:
      functionalityName: "subsample"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/datasets/processors/subsample/config.vsh.yaml"
      functionalityNamespace: "datasets/processors"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/datasets/processors/subsample/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/processors/subsample"
  - name: "common/extract_metadata"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openproblems/openproblems/src/common/extract_metadata/config.vsh.yaml"
    configInfo:
      functionalityName: "extract_metadata"
      git_tag: ""
      git_remote: "https://github.com/openproblems-bio/openproblems"
      viash_version: "0.8.6"
      config: "/home/runner/work/openproblems/openproblems/src/common/extract_metadata/config.vsh.yaml"
      functionalityNamespace: "common"
      output: ""
      platform: ""
      git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
      executable: "/nextflow/common/extract_metadata/main.nf"
    writtenPath: "/home/runner/work/openproblems/openproblems/target/nextflow/common/extract_metadata"
  set_wd_to_resources_dir: false
platforms:
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
    script:
    - "process.errorStrategy = 'ignore'"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems/openproblems/src/datasets/workflows/process_tenx_visium/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/workflows/process_tenx_visium"
  executable: "/home/runner/work/openproblems/openproblems/target/nextflow/datasets/workflows/process_tenx_visium/main.nf"
  viash_version: "0.8.6"
  git_commit: "d2d538ab0f7757ccc0695f551bf4eaa0ec88a343"
  git_remote: "https://github.com/openproblems-bio/openproblems"
