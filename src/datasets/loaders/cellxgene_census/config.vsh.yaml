functionality:
  name: cellxgene_census
  namespace: datasets/loaders
  description: |
    Query cells from a CellxGene Census or custom TileDBSoma object.
    Aside from fetching the cells' RNA counts (`.X`), cell metadata
    (`.obs`) and gene metadata (`.var`), this component also fetches
    the dataset metadata and joins it into the cell metadata.
  argument_groups:
    - name: Input database
      description: "Open CellxGene Census by version or URI."
      arguments:
        - name: "--input_uri"
          type: string
          description: "If specified, a URI containing the Census SOMA objects. If specified, will take precedence over the `--census_version` argument."
          required: false
          example: "s3://bucket/path"
        - name: "--census_version"
          description: "Which release of CellxGene census to use. Possible values are \"latest\", \"stable\", or the date of one of the releases (e.g. \"2023-07-25\"). For more information, check the documentation on [Census data releases](https://chanzuckerberg.github.io/cellxgene-census/cellxgene_census_docsite_data_release_info.html)."
          type: string
          example: "stable"
          required: false
    - name: Cell query
      description: Arguments related to the query.
      arguments:
        - name: "--species"
          type: string
          description: The organism to query, usually one of `Homo sapiens` or `Mus musculus`.
          required: true
          example: "homo_sapiens"
        - name: "--obs_value_filter"
          type: string
          description: "Filter for selecting the `obs` metadata (i.e. cells). Value is a filter query written in the SOMA `value_filter` syntax."
          required: true
          example: "is_primary_data == True and cell_type_ontology_term_id in ['CL:0000136', 'CL:1000311', 'CL:0002616'] and suspension_type == 'cell'"
    - name: Filter cells by grouping
      description: 
      arguments:
        - name: "--cell_filter_grouping"
          type: string
          description: |
            A subset of 'obs' columns by which to group the cells for filtering.
            Only groups surpassing or equal to the `--cell_filter_minimum_count`
            threshold will be retained. Take care not to introduce a selection
            bias against cells with more fine-grained ontology annotations.
          required: false
          example: ["dataset_id", "tissue", "assay", "disease", "cell_type"]
          multiple: true
        - name: "--cell_filter_minimum_count"
          type: integer
          description: |
            A minimum number of cells per group to retain. If `--cell_filter_grouping`
            is defined, this parameter should also be provided and vice versa.
          required: false
          example: 100
    - name: Count filtering
      description: Arguments related to filtering cells and genes by counts.
      arguments:
        - name: "--cell_filter_min_genes"
          type: integer
          description: Remove cells with less than this number of genes.
          required: false
          default: 50
        - name: "--cell_filter_min_counts"
          type: integer
          description: Remove cells with less than this number of counts.
          required: false
          default: 0
        - name: "--gene_filter_min_cells"
          type: integer
          description: Remove genes expressed in less than this number of cells.
          required: false
          default: 5
        - name: "--gene_filter_min_counts"
          type: integer
          description: Remove genes with less than this number of counts.
          required: false
          default: 0
    - name: Cell metadata
      description: Cell metadata arguments
      arguments:
        - name: "--obs_batch"
          type: string
          description: |
            Location of where to find the observation batch IDs.  
            
            * If not specified, the `.obs["batch"]` field will not be included.
            * If one or more values are specified, the `.obs["batch"]` field will be 
              set to the concatenated values of the specified fields, separated by
              the `obs_batch_separator`.
          required: false
          multiple: true
          multiple_sep: ","
          example: ["batch"]
        - name: "--obs_batch_separator"
          type: string
          description: Separator to use when concatenating the values of the `--obs_batch` fields.
          required: false
          default: "+"
    - name: Dataset metadata
      description: Information about the dataset that will be stored in the `.uns` slot.
      arguments:
        - name: "--dataset_id"
          type: string
          description: Unique identifier of the dataset.
          required: true
        - name: "--dataset_name"
          type: string
          description: Nicely formatted name.
          required: true
        - name: "--dataset_url"
          type: string
          description: Link to the original source of the dataset.
          required: false
        - name: "--dataset_reference"
          type: string
          description: Bibtex reference of the paper in which the dataset was published.
          required: false
        - name: "--dataset_summary"
          type: string
          description: Short description of the dataset.
          required: true
        - name: "--dataset_description"
          type: string
          description: Long description of the dataset.
          required: true
        - name: "--dataset_organism"
          type: string
          description: The organism of the dataset.
          required: true
    - name: Outputs
      description: Output arguments.
      arguments:
        - name: "--output"
          type: file
          description: Output h5ad file.
          direction: output
          required: true
          example: output.h5ad
        - name: "--output_compression"
          type: string
          choices: ["gzip", "lzf"]
          required: false
          example: "gzip"
  resources:
    - type: python_script
      path: script.py
    - path: /src/common/helper_functions/setup_logger.py
  test_resources:
    - type: python_script
      path: test.py
platforms:
  - type: docker
    #image: openproblems/base_python:1.0.0
    image: python:3.11
    setup:
      - type: python
        packages:
          - cellxgene-census
          - scanpy
    test_setup:
      - type: python
        packages:
          - viashpy
  - type: nextflow
    directives:
      label: [highmem, midcpu]