name: generate_qc
namespace: reporting
description: Generate task QC metrics

argument_groups:
  - name: Inputs
    arguments:
    - name: --input_task_info
      type: file
      description: Task info file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/task_info_schema.json
      required: true
      example: resources_test/openproblems/task_results_v4/processed/task_info.json
    - name: --input_dataset_info
      type: file
      description: Dataset info file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/dataset_info_schema.json
      required: true
      example: resources_test/openproblems/task_results_v4/processed/dataset_info.json
    - name: --input_method_info
      type: file
      description: Method info file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/method_info_schema.json
      required: true
      example: resources_test/openproblems/task_results_v4/processed/method_info.json
    - name: --input_metric_info
      type: file
      description: Metric info file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/metric_info_schema.json
      required: true
      example: resources_test/openproblems/task_results_v4/processed/metric_info.json
    - name: --input_results
      type: file
      description: Results JSON file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/results_schema.json
      required: true
      example: resources_test/openproblems/task_results_v4/processed/results.json

  - name: Outputs
    arguments:
    - name: --output
      type: file
      direction: output
      default: quality_control.json
      description: Output quality control JSON file
      info:
        format:
          type: json
          schema: /src/reporting/schemas/quality_control_schema.json

resources:
  - type: r_script
    path: script.R
  - path: /src/reporting/schemas
    dest: schemas

test_resources:
  - type: python_script
    path: /common/component_tests/run_and_check_output.py
  - path: /resources_test/openproblems/task_results_v4
    dest: resources_test/openproblems/task_results_v4

engines:
  - type: docker
    image: openproblems/base_r:1
    setup:
      - type: apt
        packages:
        - nodejs
        - npm
      - type: docker
        run: npm install -g ajv-cli
      - type: r
        cran:
        - dplyr
        - purrr
        - readr
        - stringr
        - tidyr

runners:
  - type: executable
  - type: nextflow
    directives:
      label: [lowmem, lowtime, lowcpu]
