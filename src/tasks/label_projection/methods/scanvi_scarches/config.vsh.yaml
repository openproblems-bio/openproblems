__merge__: ../../api/comp_method.yaml

functionality:
  name: scanvi_scarches
  info:
    label: scANVI+scArches
    summary: 'Query to reference single-cell integration with transfer learning with scANVI and scArches'
    description: 'scArches+scANVI or "Single-cell architecture surgery" is a deep learning method for mapping new datasets onto a pre-existing reference model, using transfer learning and parameter optimization. It first uses scANVI to build a reference model from the training data, and then apply scArches to map the test data onto the reference model and make predictions.'
    reference: lotfollahi2020query
    documentation_url: https://docs.scvi-tools.org
    repository_url: https://github.com/scverse/scvi-tools
    preferred_normalization: counts
    v1:
      path: openproblems/tasks/label_projection/methods/scvi_tools.py
      commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
    variants:
      scanvi_scarches:
  arguments:
    - name: "--n_latent"
      type: "integer"
      default: 30
      description: "Number of units in the latent layer"
    - name: "--n_layers"
      type: "integer"
      default: 2
      description: "Number of hidden layers"
    - name: "--n_hidden"
      type: "integer"
      default: 128
      description: "Number of units in the hidden layers"
    - name: "--dropout_rate"
      type: "double"
      default: 0.2
      description: "Rate of dropout applied in training"
    - name: "--max_epochs"
      type: "integer"
      default: 2
      description: "Maximum number of training epochs"
  resources:
    - type: python_script
      path: script.py
platforms:
  - type: docker
    image: openproblems/base_pytorch_nvidia:1.0.0
    setup:
      - type: python
        pypi: scvi-tools>=1.1.0
      - type: docker
        run: |
          pip install -U "jax[cuda12_pip]" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html
  - type: nextflow
    directives:
      label: [midtime, midmem, midcpu, gpu]
