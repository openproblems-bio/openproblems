# use metric api spec
__merge__: ../../api/comp_metric_embedding.yaml
functionality:
  name: cell_cycle_conservation
  info:
    metrics:
      - name: cell_cycle_conservation
        label: Cell Cycle Conservation
        summary: Cell cycle conservation score based on principle component regression on cell cycle gene scores
        description: |
          The cell-cycle conservation score evaluates how well the cell-cycle effect can be
          captured before and after integration. We computed cell-cycle scores using Scanpy’s
          score_cell_cycle function with a reference gene set from Tirosh et al for the
          respective cell-cycle phases. We used the same set of cell-cycle genes for mouse and
          human data (using capitalization to convert between the gene symbols). We then computed
          the variance contribution of the resulting S and G2/M phase scores using principal
          component regression (Principal component regression), which was performed for each
          batch separately. The differences in variance before, Varbefore, and after, Varafter,
          integration were aggregated into a final score between 0 and 1, using the equation:
          CCconservation=1−|Varafter−Varbefore|/Varbefore.

          In this equation, values close to 0 indicate lower conservation and 1 indicates complete
          conservation of the variance explained by cell cycle. In other words, the variance
          remains unchanged within each batch for complete conservation, while any deviation from
          the preintegration variance contribution reduces the score.
        reference: luecken2022benchmarking
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/_batch_integration/batch_integration_embed/metrics/cc_score.py
          commit: b3456fd73c04c28516f6df34c57e6e3e8b0dab32
  resources:
    - type: python_script
      path: script.py
    - type: python_script
      path: /src/common/helper_functions/read_anndata_partial.py
platforms:
  - type: docker
    image: openproblems/base_python:1.0.0
    setup:
      - type: python
        pypi:
          - scib==1.1.5
  - type: nextflow
    directives: 
      label: [midtime, midmem, lowcpu]
