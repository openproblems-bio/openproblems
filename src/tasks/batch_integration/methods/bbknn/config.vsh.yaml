# use method api spec
__merge__: ../../api/comp_method_graph.yaml
functionality:
  name: bbknn
  info:
    label: BBKNN
    summary: "BBKNN creates k nearest neighbours graph by identifying neighbours within batches, then combining and processing them with UMAP for visualization."
    description: |
      "BBKNN or batch balanced k nearest neighbours graph is built for each cell by
      identifying its k nearest neighbours within each defined batch separately,
      creating independent neighbour sets for each cell in each batch. These sets
      are then combined and processed with the UMAP algorithm for visualisation."
    reference: "polanski2020bbknn"
    repository_url: "https://github.com/Teichlab/bbknn"
    documentation_url: "https://github.com/Teichlab/bbknn#readme"
    v1:
      path: openproblems/tasks/_batch_integration/batch_integration_graph/methods/bbknn.py
      commit: b3456fd73c04c28516f6df34c57e6e3e8b0dab32
    preferred_normalization: log_cp10k
    variants:
      bbknn_full_unscaled:
      bbknn_full_scaled:
        preferred_normalization: log_cp10k_scaled
  arguments:
    - name: --annoy_n_trees
      type: integer
      default: 10
      description: Number of trees to use in the annoy forrest.
    - name: --neighbors_within_batch
      type: integer
      default: 3
      description: Number of neighbors to report within each batch.
    - name: --n_hvg
      type: integer
      default: 2000
      description: Number of highly variable genes to use.
  resources:
    - type: python_script
      path: script.py
    - type: python_script
      path: /src/common/helper_functions/read_anndata_partial.py
platforms:
  - type: docker
    image: openproblems/base_python:1.0.0
    setup:
      - type: python
        pypi:
          - bbknn
  - type: nextflow
    directives: 
      label: [midtime, midmem, lowcpu]
