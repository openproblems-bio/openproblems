__merge__: ../../api/comp_metric.yaml
functionality:
  name: "coranking"
  # description: |
  #   This is a set of metrics which all use a co-ranking matrix as the basis of the metric.
  info:
    metrics:
      - name: continuity_at_k30
        label: Continuity at k=30
        reference: venna2006local
        summary: "The continuity metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        description: "The continuity metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: trustworthiness_at_k30
        label: Trustworthiness at k=30
        summary: "The trustworthiness metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        description: "The trustworthiness metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: venna2006local
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: qnx_at_k30
        label: The value for QNX at k=30
        summary: "The QNX metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        description: "The QNX metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: lee2009quality
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: lcmc_at_k30
        label: The value for LCMC at k=30
        summary: "The LCMC metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        description: "The LCMC metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: chen2009local
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: qnx_auc
        label: Area under the QNX curve
        summary: "The AU-QNX metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        description: "The AU-QNX metric at k=30 computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: lueks2011evaluate
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: qlocal
        label: Local quality measure
        summary: "The local quality metric computed on the co-ranking matrix between expression matrix and embedding."
        description: "The local quality metric computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: lueks2011evaluate
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
      - name: qglobal
        label: Global quality measure
        summary: "The Global quality metric computed on the co-ranking matrix between expression matrix and embedding."
        description: "The Global quality metric computed on the co-ranking matrix between expression matrix and embedding."
        repository_url: https://github.com/gdkrmr/coRanking/
        documentation_url: https://coranking.guido-kraemer.com/
        reference: lueks2011evaluate
        min: 0
        max: 1
        maximize: true
        v1:
          path: openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py 
          commit: e3be930c6d4bbd656ab1e656badb52bb50e6cdd6
          note: |
            The original v1 implementations consisted of a lot of helper functions which were 
            derived from the pyDRMetrics package. This version uses the coRanking package
            to avoid reimplementing and potentially introducing a lot of bugs in how
            the various metrics are computed.

            In addition, the references for each of the metrics were looked up to
            properly attribute the original authors of each of the metrics.
  resources:
    - type: r_script
      path: script.R
platforms:
  - type: docker
    image: openproblems/base_r:1.0.0
    setup:
      - type: r
        cran: [ coRanking ]
  - type: nextflow
    directives: 
      label: [midtime, highmem, midcpu]
