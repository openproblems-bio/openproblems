name: Build Docker images

on:
  push:
    branches:
      - 'master'
      - 'test_docker'

jobs:
  build_images:
    runs-on: ${{ matrix.config.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    env:
      BRANCH_NAME: "auto_update_docker_${{ github.run_number }}"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'current', os: ubuntu-18.04, python: '3.8' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2
      with:
        fetch-depth: 1000

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Check Ubuntu version
      run: |
        echo "UBUNTU_VERSION=`grep DISTRIB_RELEASE /etc/lsb-release | sed 's/.*=//g'`" >> $GITHUB_ENV

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{env.UBUNTU_VERSION}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{env.UBUNTU_VERSION}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U wheel setuptools
        pip install --editable .[evaluate]
        python -c "import openproblems"

    - name: Pull images
      run: |
        cd workflow
        snakemake -j $(grep -c processor /proc/cpuinfo) docker_pull
        cd ..

    - name: Build images
      run: |
        cd workflow
        snakemake -j $(grep -c processor /proc/cpuinfo) docker
        cd ..

    - name: Push images
      if: startsWith(github.ref, 'refs/heads/master')
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        cd workflow
        snakemake -j $(grep -c processor /proc/cpuinfo) docker_push
        cd ..
        echo "CHANGED=`git diff --exit-code > /dev/null && echo false || echo true`" >> $GITHUB_ENV

    - name: Set up Git branch
      if: env.CHANGED && startsWith(github.ref, 'refs/heads/master')
      run: |
        git checkout -b $BRANCH_NAME
        git push -u origin $BRANCH_NAME

    - name: Commit result
      if: env.CHANGED && startsWith(github.ref, 'refs/heads/master')
      uses: EndBug/add-and-commit@v6
      with:
        author_name: SingleCellOpenProblems
        author_email: singlecellopenproblems@protonmail.com
        message: 'Update docker version # ci skip'
        add: "docker/.version"
        branch: ${{ env.BRANCH_NAME }}
        push: false

    - name: Create Pull Request
      if: env.CHANGED && startsWith(github.ref, 'refs/heads/master')
      uses: peter-evans/create-pull-request@v3
      with:
        branch: ${{ env.BRANCH_NAME }}
        delete-branch: true
        base: master
        title: '[auto] Update docker version'
        reviewers: scottgigante, dburkhardt

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: check
