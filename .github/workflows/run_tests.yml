name: Run Tests

on:
  push:
    branches-ignore:
      - 'test_docker'
      - 'test_benchmark'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  run_tester:
    runs-on: ${{ matrix.config.os }}
    if: >-
      !contains(github.event.head_commit.message, 'ci skip') &&
      (
        startsWith(github.ref, 'refs/heads') ||
        github.event.pull_request.draft == false
      )

    env:
      RENV_PATHS_ROOT: ~/.local/share/renv

    strategy:
      fail-fast: false
      matrix:
        config:
        - {name: 'curr', os: ubuntu-18.04, python: '3.8', r: 'release' }
        - {name: 'prev', os: ubuntu-18.04, python: '3.7', r: 'release' }
        - {name: 'old', os: ubuntu-18.04, python: '3.6', r: 'release' }

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - name: Check Ubuntu version
      run: |
        echo "UBUNTU_VERSION=`grep DISTRIB_RELEASE /etc/lsb-release | sed 's/.*=//g'`" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y libhdf5-dev pandoc gfortran libblas-dev liblapack-dev libedit-dev llvm-dev libcurl4-openssl-dev

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python }}

    - name: Set up R
      id: setup-r
      uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.config.r }}

    - name: Check Ubuntu version
      run: |
        echo "UBUNTU_VERSION=`grep DISTRIB_RELEASE /etc/lsb-release | sed 's/.*=//g'`" >> $GITHUB_ENV

    - name: Cache Python packages
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{env.UBUNTU_VERSION}}-pip-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
        restore-keys: ${{env.UBUNTU_VERSION}}-pip-${{ env.pythonLocation }}-

    - name: Install package & dependencies
      run: |
        python -m pip install --upgrade "pip<=21.0"
        pip install --use-deprecated=legacy-resolver -U wheel setuptools
        pip install --use-deprecated=legacy-resolver -U --editable .[test,r,evaluate]
        python -c "import openproblems"

    - name: Cache R packages
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ env.UBUNTU_VERSION }}-renv-${{ steps.setup-r.outputs.installed-r-version }}-${{ hashFiles('**/renv.lock') }}
        restore-keys: |
          ${{ env.UBUNTU_VERSION }}-renv-${{ steps.setup-r.outputs.installed-r-version }}-

    - name: Install R packages
      run: |
        if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
        renv::restore()

        con = file("docker/openproblems-r-base/r_requirements.txt", "r")
        while ( length(pkg <- readLines(con, n = 1)) > 0 ) {
          renv::install(pkg)
        }
        close(con)
      shell: Rscript {0}

    - name: Pull Docker images
      run: |
        cd workflow
        snakemake -j 4 docker_pull
        cd ..

    - name: Build Docker images
      run: |
        cd workflow
        snakemake -j 4 docker
        cd ..

    - name: Update Docker images
      run: |
        cd workflow
        snakemake -j 4 docker_update
        cd ..

    - name: Run tests
      run: pytest --cov=openproblems -v

    - name: Upload coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github
      run: coveralls

    - name: Upload check results on fail
      if: failure()
      uses: actions/upload-artifact@master
      with:
        name: ${{ matrix.config.name }}_results
        path: results
